{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","invalidTitle","invalidDescription","invalidImgUrl","invalidImdbUrl","invalidImdbId","newMovie","handleChange","event","target","name","value","setState","currentState","onSubmit","preventDefault","props","onAdd","onBlur","text","trim","regex","test","length","Number","isNaN","console","log","this","htmlFor","classNames","type","id","onChange","placeholder","required","rows","disabled","React","Component","App","moviesFromServer","addMovie","st","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b02b223.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable no-console */\nimport React from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\ntype State = {\n  newMovie: Movie;\n  invalidTitle: boolean;\n  invalidDescription: boolean;\n  invalidImgUrl: boolean;\n  invalidImdbUrl: boolean;\n  invalidImdbId: boolean;\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    invalidTitle: false,\n    invalidDescription: false,\n    invalidImgUrl: false,\n    invalidImdbUrl: false,\n    invalidImdbId: false,\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  handleChange = (\n    event:React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState(currentState => ({\n      newMovie: {\n        ...currentState.newMovie,\n        [name]: value,\n      },\n    }));\n\n    if (name === 'title') {\n      this.setState({ invalidTitle: false });\n    }\n\n    if (name === 'description') {\n      this.setState({ invalidDescription: false });\n    }\n\n    if (name === 'imgUrl') {\n      this.setState({ invalidImgUrl: false });\n    }\n\n    if (name === 'imdbUrl') {\n      this.setState({ invalidImdbUrl: false });\n    }\n\n    if (name === 'imdbId') {\n      this.setState({ invalidImdbId: false });\n    }\n  };\n\n  onSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state.newMovie);\n\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  onBlur = (\n    event: React.FocusEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { value, name } = event.target;\n    const text = value.trim();\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (name === 'imgUrl' && !regex.test(text)) {\n      this.setState({ invalidImgUrl: true });\n    }\n\n    if (name === 'imdbUrl' && !regex.test(text)) {\n      this.setState({ invalidImdbUrl: true });\n    }\n\n    if (text.length === 0) {\n      if (name === 'title') {\n        this.setState({ invalidTitle: true });\n      } else if (name === 'description') {\n        this.setState({ invalidDescription: true });\n      } else if (name === 'imdbId') {\n        this.setState({ invalidImdbId: true });\n      }\n    }\n\n    if (name === 'imdbId' && Number.isNaN(Number(text))) {\n      this.setState({ invalidImdbId: true });\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newMovie;\n    const {\n      invalidTitle,\n      invalidDescription,\n      invalidImgUrl,\n      invalidImdbUrl,\n      invalidImdbId,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"sidebar__form Form\">\n        <label htmlFor=\"form-title\" className=\"Form__label\">\n          Film title:\n          <input\n            className={classNames('Form__input', 'Form__title', { 'Form__input--error': invalidTitle })}\n            type=\"text\"\n            name=\"title\"\n            id=\"form-title\"\n            value={title}\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n            placeholder=\"type title here...\"\n            required\n          />\n          <div className=\"Form__error\">{invalidTitle && 'Wrong title'}</div>\n        </label>\n        <label htmlFor=\"form-description\" className=\"Form__label\">\n          Film description:\n          <textarea\n            className={classNames('Form__input', 'Form__description', { 'Form__input--error': invalidDescription })}\n            name=\"description\"\n            id=\"form-description\"\n            value={description}\n            onChange={this.handleChange}\n            rows={4}\n            onBlur={this.onBlur}\n            placeholder=\"type description here...\"\n            required\n          />\n          <div className=\"Form__error\">{invalidDescription && 'Wrong description'}</div>\n        </label>\n        <label htmlFor=\"form-imgUrl\" className=\"Form__label\">\n          Link for film poster:\n          <input\n            className={classNames('Form__input', 'Form__imgUrl', { 'Form__input--error': invalidImgUrl })}\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"form-imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n            placeholder=\"type imgUrl here...\"\n            required\n          />\n          <div className=\"Form__error\">{invalidImgUrl && 'Wrong image link'}</div>\n        </label>\n        <label htmlFor=\"form-imdbUrl\" className=\"Form__label\">\n          Link to the IMDb:\n          <input\n            className={classNames('Form__input', 'Form__imdbUrl', { 'Form__input--error': invalidImdbUrl })}\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"form-imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n            placeholder=\"type imdbUrl here...\"\n            required\n          />\n          <div className=\"Form__error\">{invalidImdbUrl && 'Wrong IMDb link'}</div>\n        </label>\n        <label htmlFor=\"form-imdbId\" className=\"Form__label\">\n          Films id on the IMDb:\n          <input\n            className={classNames('Form__input', 'Form__imdbId', { 'Form__input--error': invalidImdbId })}\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"form-imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n            onBlur={this.onBlur}\n            placeholder=\"type imdbId here...\"\n            required\n          />\n          <div className=\"Form__error\">{invalidImdbId && 'Wrong IMDb Id'}</div>\n        </label>\n\n        <button\n          className=\"Form__btn\"\n          type=\"submit\"\n          disabled={invalidTitle || invalidDescription || invalidImgUrl\n          || invalidImdbUrl || invalidImdbId}\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((st) => ({ movies: [...st.movies, movie] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}